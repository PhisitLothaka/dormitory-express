// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String     @unique
  password     String
  idCard       String     @unique
  mobile       String
  profileImage String?
  UserRoom     UserRoom[]
  Sumarize     Sumarize[]
}

model Admin {
  id            Int             @id @default(autoincrement())
  password      String
  email         String          @unique
  mobile        String
  idCard        String          @unique
  firstName     String
  lastName      String
  Room          Room[]
  MeterWater    MeterWater[]
  MeterElectric MeterElectric[]
  Sumarize      Sumarize[]
  UserRoom      UserRoom[]
}

model Room {
  id            Int             @id @default(autoincrement())
  name          String
  price         Int
  floor         Int
  statusRoom    statusRoom
  userRoom      UserRoom[]
  adminId       Int
  admin         Admin           @relation(fields: [adminId], references: [id])
  Sumarize      Sumarize[]
  MeterWater    MeterWater[]
  MeterElectric MeterElectric[]
}

enum statusRoom {
  BUSY
  IDLE
}

model UserRoom {
  id            Int           @id @default(autoincrement())
  userIn        DateTime      @default(now())
  userOut       DateTime?
  statusPayment statusPayment
  roomId        Int
  room          Room          @relation(fields: [roomId], references: [id])
  userId        Int
  user          User          @relation(fields: [userId], references: [id])
  adminId       Int
  admin         Admin         @relation(fields: [adminId], references: [id])
}

enum statusPayment {
  PAID
  UNPAID
}

model MeterWater {
  id        Int      @id @default(autoincrement())
  priceUnit Int
  unit      Int
  unitUsed  Int?
  createAt  DateTime @db.Date
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  adminId   Int
  admin     Admin    @relation(fields: [adminId], references: [id])
}

model MeterElectric {
  id        Int      @id @default(autoincrement())
  priceUnit Int
  unit      Int
  unitUsed  Int?
  createAt  DateTime @db.Date
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  adminId   Int
  admin     Admin    @relation(fields: [adminId], references: [id])
}

model Sumarize {
  id                Int      @id @default(autoincrement())
  unitWater         Int
  priceUnitWater    Int
  unitElectric      Int
  priceUnitElectric Int
  priceRoom         Int
  totalPrice        Int
  timeReceipt       DateTime @default(now())
  userId            Int
  user              User     @relation(fields: [userId], references: [id])
  roomId            Int
  room              Room     @relation(fields: [roomId], references: [id])
  adminId           Int
  admin             Admin    @relation(fields: [adminId], references: [id])
}
